function filterAmount(s, divisor = 1) {
  var money = parseFloat(s)
  if (money) {
    s = (money / divisor).toFixed(2) + ''
    var l = s.split('.')[0].split('').reverse()
    var r = s.split('.')[1]
    var t = ''
    l.forEach(function (ll, key) {
      t += l[key] + ((key + 1) % 3 == 0 && key + 1 != l.length ? ',' : '')
    })
    return t.split('').reverse().join('') + '.' + r
  } else if (s == 0) {
    return '0.00'
  } else {
    return '---'
  }
}

function filterDate(v, format) {
  if (!format) {
    format = 'yyyy-MM-dd hh:mm:ss'
  }
  if (typeof v === 'string') {
    // eslint-disable-next-line no-undef
    v = v.replace(getRegExp('-', 'g'), '/')
  }
  // eslint-disable-next-line no-undef
  var realDate = getDate(v)

  function timeFormat(num) {
    return num < 10 ? '0' + num : num
  }

  var date = [
    ['M+', timeFormat(realDate.getMonth() + 1)],
    ['d+', timeFormat(realDate.getDate())],
    ['h+', timeFormat(realDate.getHours())],
    ['m+', timeFormat(realDate.getMinutes())],
    ['s+', timeFormat(realDate.getSeconds())],
    ['q+', Math.floor((realDate.getMonth() + 3) / 3)],
    ['S+', realDate.getMilliseconds()],
  ]
  // eslint-disable-next-line no-undef
  var reg1 = getRegExp('(y+)', 'i').exec(format)
  if (reg1) {
    format = format.replace(reg1[1], (realDate.getFullYear() + '').substring(4 - reg1[1].length))
  }
  for (var i = 0; i < date.length; i++) {
    var k = date[i][0]
    // eslint-disable-next-line no-redeclare
    var v = date[i][1]

    // eslint-disable-next-line no-undef
    var reg2 = getRegExp('(' + k + ')').exec(format)
    if (reg2) {
      format = format.replace(reg2[1], reg2[1].length == 1 ? v : ('00' + v).substring(('' + v).length))
    }
  }
  return format
}

function filterTime(date, fmt) {
  if (!date) return '--/--/--'
  // eslint-disable-next-line no-undef
  date = date.replace(getRegExp('[^0-9-]', 'ig'), '')
  return filterDate(+date, fmt || 'yyyy-MM-dd')
}

module.exports = {
  source: function (src) {
    return src ? 'https://www.rs-superlink.com:8090/app/system/icon/viewIconById/' + src : ''
  },
  filterDate: filterDate,
  filterTime: filterTime,
  includes: function (arr, value, key) {
    if (!arr) arr = []
    var data = arr
    if (key) {
      data = []
      arr.forEach(function (item) {
        data.push(item[key])
      })
    }
    return data.indexOf(value) > -1
  },
  filterLength: function (value) {
    return value ? value.length : 0
  },
  formatPickerData: function (columnsData, keyWordsOfShow, strKeyWords) {
    return columnsData.filter(function (item) {
      return item[keyWordsOfShow].indexOf(strKeyWords.trim()) > -1
    })
  },
  filterAmount: filterAmount,
  filterTotalAmount: function (arr) {
    var result = 0
    arr.forEach(function (item, index) {
      result += +item.amount
    })
    return filterAmount(result)
  },
  filterDiscountTip: function (arr) {
    var strTip = ''
    if (arr && arr.length) {
      strTip = arr
        .map(function (item, index) {
          var minPoint = item.minPoint
          var amount = item.amount
          return '满' + filterAmount(minPoint) + '减' + filterAmount(amount)
        })
        .join('　')
    }
    return strTip
  },
  filterSpecsPrompt: function (value) {
    if (!value) return null
    var arr = value.map(function (item) {
      return item.specName
    })
    return arr.join('/')
  },
  isPhone: function (val) {
    // eslint-disable-next-line no-undef, prettier/prettier
    return getRegExp('^1d{10}$').test(val)
  },
  isCode: function (val) {
    // eslint-disable-next-line no-undef, prettier/prettier
    return getRegExp('^d{6}$').test(val)
  },
  // 验证码文案
  renderCodeBtn: function (conut) {
    if (conut === '') return '获取验证码'
    if (conut > 0) {
      return conut + '秒后重新获取'
    } else {
      return '重新获取'
    }
  },
  filterPhone: function (value) {
    return value ? value.substring(0, 3) + '****' + value.substring(7) : ''
  },
  filterIncludes: function (arr, v) {
    return arr.indexOf(v) > -1
  },
  filterHealth: function (v) {
    if (typeof v === 'string') {
      return v
    }
    var res = []
    v.forEach(function (item, index) {
      if (item.type) {
        var str = (item.value ? '有' : '无') + item.type
        res.push(str)
      }
    })
    return res.join(',')
  },
  filterIDcard: function (IdCard, type) {
    if (typeof IdCard === 'number') {
      IdCard = '' + IdCard
    }
    //获取出生日期
    if (type == 1) {
      var birth = IdCard.substring(6, 10) + '-' + IdCard.substring(10, 12) + '-' + IdCard.substring(12, 14)
      return birth
    }
    //获取性别
    if (type == 2) {
      if (parseInt(IdCard.substring(16, 1)) % 2 == 1) {
        return '男'
      } else {
        return '女'
      }
    }
    //获取年龄
    if (type == 3) {
      var myDate = getDate()
      var month = myDate.getMonth() + 1
      var day = myDate.getDate()
      var age = myDate.getFullYear() - IdCard.substring(6, 10) - 1
      if (IdCard.substring(10, 12) < month || (IdCard.substring(10, 12) == month && IdCard.substring(12, 14) <= day)) {
        age++
      }
      return age
    }
  },
  filterGoodsTotal: function (goods) {
    var total = 0
    goods.forEach(function (item) {
      total += item.number
    })
    return total
  },
}
